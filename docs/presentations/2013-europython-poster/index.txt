#################################
diecutter: templates as a service
#################################

This is a draft for diecutter poster session at `EuroPython 2013
<https://ep2013.europython.eu/>`_, Florence.

Here is the poster:

.. image:: poster.svg
   :height: 400


************************************
POST data returns rendered templates
************************************

files = post(template_url, data)

Render files
============

.. image:: /_static/overview_files.svg

Render directories
==================

.. image:: /_static/overview_directories.svg


*************
Configuration
*************



***************
Code generation
***************

Your Django startproject and startapp
=====================================

Run:

.. code:: sh

   curl -X POST  \
        -d django_project=demo  \
        -H accept:application/gzip  \
        http://diecutter/+django_project+/  \
        | tar -zxv

You got:

.. code:: text

   .
   ├── demo/
   │   ├── __init__.py
   │   ├── settings.py
   │   ├── urls.py
   │   └── wsgi.py
   └── manage.py

Enhanced sphinx-quickstart
==========================

Run Write the docs template for Sphinx.

You got:


.. note:: The "demo/" folder is not returned if "with_demo" is false.


*********************
Flexible architecture
*********************

* multiple template engines
* template loaders can read remote files (github, bitbucket, ...)
* simple REST API
* writers return HTTP responses or trigger custom actions
* open source, deploy your own


****************
Credits, license
****************

diecutter is licensed under BSD

poster published under `CC BY 3.0
<http://creativecommons.org/licenses/by/3.0/>`_

(c) Benoît Bryon & Rémy Hubscher
